// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Get before Data
    Register(in=befOut, load=true, out=tmpOutBef);
    Bit(in=befInc, load=true, out=tmpIncBef);
    Bit(in=befLoad, load=true, out=tmpLoadBef);
    Bit(in=befReset, load=true, out=tmpResetBef);
    
    // inc
    Inc16(in=tmpOutBef, out=tmpOutI);
    Mux16(a=tmpOutBef, b=tmpOutI, sel=tmpIncBef, out=tmpOutInc);

    // load
    Mux16(a=tmpOutInc, b=in, sel=tmpLoadBef, out=tmpOutLoad);

    // reset
    Mux16(a=tmpOutLoad, b[0..15]=false, sel=tmpResetBef, out=out, out=befOut);

    // Save Data
    Or(a=inc, b=false, out=befInc);
    Or(a=load, b=false, out=befLoad);
    Or(a=reset, b=false, out=befReset);
}
